// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
        Inc16(in=regout, out=reginc);
        /**
         * Logic is basically backwards like a depth-first
         * recursion.
         */
        Mux16(a=regout, b=reginc, sel=inc, out=incin);
        Mux16(a=incin, b=in, sel=load, out=loadout);
        Mux16(a=loadout, b=false, sel=reset, out=resetout);
        /**
         * Register load can stay on since the default
         * value of the Mux chip chain is the existing register
         * output if none of the control bits are enabled
         */
        Register(in=resetout, load=true, out=out, out=regout);
}