// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
        /** Demux load single by the address bits 4-6 */
        DMux8Way(in=load, sel=address[3..5], a=al, b=bl, c=cl, d=dl, e=el, f=fl, g=gl, h=hl);
        /** RAM8 Chips w/ address bits 1-3 */
        RAM8(in=in, load=al, address=address[0..2], out=ao);
        RAM8(in=in, load=bl, address=address[0..2], out=bo);
        RAM8(in=in, load=cl, address=address[0..2], out=co);
        RAM8(in=in, load=dl, address=address[0..2], out=do);
        RAM8(in=in, load=el, address=address[0..2], out=eo);
        RAM8(in=in, load=fl, address=address[0..2], out=fo);
        RAM8(in=in, load=gl, address=address[0..2], out=go);
        RAM8(in=in, load=hl, address=address[0..2], out=ho);
        /** Mux the output by the address bits 4-6 */
        Mux8Way16(a=ao, b=bo, c=co, d=do, e=eo, f=fo, g=go, h=ho, sel=address[3..5], out=out);
}