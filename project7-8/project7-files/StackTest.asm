// StackTest: push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: eq
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D-M
@StackTest$eq.0
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@StackTest$end_eq.0
0;JMP
(StackTest$eq.0)
@SP
A=M
M=-1
@SP
M=M+1
(StackTest$end_eq.0)
// StackTest: push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: eq
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D-M
@StackTest$eq.1
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@StackTest$end_eq.1
0;JMP
(StackTest$eq.1)
@SP
A=M
M=-1
@SP
M=M+1
(StackTest$end_eq.1)
// StackTest: push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: eq
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D-M
@StackTest$eq.2
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@StackTest$end_eq.2
0;JMP
(StackTest$eq.2)
@SP
A=M
M=-1
@SP
M=M+1
(StackTest$end_eq.2)
// StackTest: push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: lt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@StackTest$lt.0
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@StackTest$end_lt.0
0;JMP
(StackTest$lt.0)
@SP
A=M
M=-1
@SP
M=M+1
(StackTest$end_lt.0)
// StackTest: push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: lt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@StackTest$lt.1
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@StackTest$end_lt.1
0;JMP
(StackTest$lt.1)
@SP
A=M
M=-1
@SP
M=M+1
(StackTest$end_lt.1)
// StackTest: push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: lt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@StackTest$lt.2
D;JLT
@SP
A=M
M=0
@SP
M=M+1
@StackTest$end_lt.2
0;JMP
(StackTest$lt.2)
@SP
A=M
M=-1
@SP
M=M+1
(StackTest$end_lt.2)
// StackTest: push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: gt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@StackTest$gt.0
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@StackTest$end_gt.0
0;JMP
(StackTest$gt.0)
@SP
A=M
M=-1
@SP
M=M+1
(StackTest$end_gt.0)
// StackTest: push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: gt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@StackTest$gt.1
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@StackTest$end_gt.1
0;JMP
(StackTest$gt.1)
@SP
A=M
M=-1
@SP
M=M+1
(StackTest$end_gt.1)
// StackTest: push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: gt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@StackTest$gt.2
D;JGT
@SP
A=M
M=0
@SP
M=M+1
@StackTest$end_gt.2
0;JMP
(StackTest$gt.2)
@SP
A=M
M=-1
@SP
M=M+1
(StackTest$end_gt.2)
// StackTest: push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: add
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: sub
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
@SP
A=M
M=D
@SP
M=M+1
// StackTest: neg
@SP
AM=M-1
D=-M
@SP
A=M
M=D
@SP
M=M+1
// StackTest: and
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D&M
@SP
A=M
M=D
@SP
M=M+1
// StackTest: push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// StackTest: or
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D|M
@SP
A=M
M=D
@SP
M=M+1
// StackTest: not
@SP
AM=M-1
D=!M
@SP
A=M
M=D
@SP
M=M+1