// Bootstrap code
@256
D=A
@SP
M=D
@Sys.init
0;JMP
// Sys.init: function Sys.init 0
(Sys.init)
// Sys.init: push constant 4000
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.init: pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// Sys.init: push constant 5000
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.init: pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// Sys.init: call Sys.main 0
@Sys.main$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(Sys.main$ret.0)
// Sys.init: pop temp 1
@SP
AM=M-1
D=M
@R6
M=D
// Sys.init: label LOOP
(Sys.init$LOOP)
// Sys.init: goto LOOP
@Sys.init$LOOP
0;JMP
// Sys.main: function Sys.main 5
(Sys.main)
D=0
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: push constant 4001
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// Sys.main: push constant 5001
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// Sys.main: push constant 200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: pop local 1
@1
D=A
@LCL
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// Sys.main: push constant 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: pop local 2
@2
D=A
@LCL
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// Sys.main: push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: pop local 3
@3
D=A
@LCL
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// Sys.main: push constant 123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: call Sys.add12 1
@Sys.add12$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(Sys.add12$ret.0)
// Sys.main: pop temp 0
@SP
AM=M-1
D=M
@R5
M=D
// Sys.main: push local 0
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: push local 1
@LCL
A=M+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: push local 2
@LCL
A=M+1
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: push local 3
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: push local 4
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: add
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: add
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: add
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: add
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Sys.main: return
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M-1
@THAT
M=D
@2
D=A
@R13
D=M-D
@THIS
M=D
@3
D=A
@R13
D=M-D
@ARG
M=D
@4
D=A
@R13
D=M-D
@LCL
M=D
@R14
0;JMP
// Sys.add12: function Sys.add12 0
(Sys.add12)
// Sys.add12: push constant 4002
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.add12: pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// Sys.add12: push constant 5002
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.add12: pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// Sys.add12: push argument 0
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Sys.add12: push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// Sys.add12: add
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Sys.add12: return
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
D=M-1
@THAT
M=D
@2
D=A
@R13
D=M-D
@THIS
M=D
@3
D=A
@R13
D=M-D
@ARG
M=D
@4
D=A
@R13
D=M-D
@LCL
M=D
@R14
0;JMP